>> Adding data to Spring Model:
    > How we can use it;
    > How we can add data to it;
    > How we can read data from the model;

>> Spring Model:

> The Model is a container for your application data;

> In your Controller:
    > You can put anything in the model;
    > strings, objects, info from database, etc...

> Your View page(JSP) can access data from the model;


>> Code Example:

> We want to create a new method to process form data 
> Read the form data: student's name
> Convert the name to upper case
> Add the uppercase version to the model 

>> Passing Model to your Controller:

@RequestMapping("/processFormVersionTwo")
public String letsShoutDude(HttpServletRequest request, Model model){

    // read the request parameter from the HTML form 
    String theName = request.getParameter("studentName");

    // convert the data to all caps 
    theName = theName.toUpperCase();

    // create the message
    String result = "Yo! "+theName;

    // add message to the model 
    model.addAttribute("message",result);
    // Here "message" is name of attribute and "result" is the value;
    // You can change the "message" to any name(It is a variable);

    return "helloworld";
}

// HttpServletRequest request: It holds HTML form data;
// Model model: Container for your data 

>> View Template - JSP 
<html><body>
Hello World of Spring!
...
The Message: ${message} // We can access model name directly here;
</body></html>


>> Adding more data to your Model:

// get the data 

String result = ...
List<Student> theStudentList = ...
ShoppingCart theShoppingCart = ...

// add data to the model 

model.addAttribute("message", result);
model.addAttribute("students", theStudentList);
model.addAttribute("shoppingCart", theShoppingCart);